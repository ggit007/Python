public class InsertCustomerController {
    @AuraEnabled
    public static void insertCustomers(String accountId) {
        Account acc = [SELECT Name, Id, country__c, customerStatus__c, restrictedIndicator__c,
                       craIndicator__c, simplifiedCustInd__c, specialLoanIndicator__c, fullname__c,
                       treasuryReportingAreaCode__c, majorUnderwriterIndicator__c, 
                       Loan_External_ID__c, brokerIndicator__c, shortname__c 
                       FROM Account where Id =: accountId];
        
        String soapCall = '<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE InsertCustomer SYSTEM "InsertCustomer.dtd"><InsertCustomer';
        //<?xml version="1.0" encoding="UTF-8" ?>
        soapCall += ' version="1.0"';
        soapCall += ' brokerIndicator="' + acc.brokerIndicator__c +'"';
        soapCall += ' country="' + acc.country__c + '"';
        soapCall += ' craIndicator="' + acc.craIndicator__c + '"';
        soapCall += ' customerStatus="' + acc.customerStatus__c + '"';
        soapCall += ' externalId="' + acc.Loan_External_ID__c + '"';
        soapCall += ' fullname="' + acc.fullname__c + '"';
        soapCall += ' majorUnderwriterIndicator="' + acc.majorUnderwriterIndicator__c +'"';
        soapCall += ' restrictedIndicator="' + acc.restrictedIndicator__c + '"';
        soapCall += ' shortname="' +  acc.shortname__c + '"';
        soapCall += ' simplifiedCustInd="' + acc.simplifiedCustInd__c +'"';
        soapCall += ' specialLoanIndicator="' + acc.specialLoanIndicator__c +'"';
        soapCall += ' treasuryReportingAreaCode="' + acc.treasuryReportingAreaCode__c +'"/>';
        
        
        /* String str = callout(soapCall);
//String str = '<?xml version="1.0" encoding="utf-8"?><soapenv:Envelope xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope"><soapenv:Body><soapenv:Fault><soapenv:Code><soapenv:Value>soapenv:Server</soapenv:Value></soapenv:Code><soapenv:Reason><soapenv:Text xml:lang="en_US">EWSAPI024 - Incorrect response from API Server.</soapenv:Text></soapenv:Reason><soapenv:Detail><tns:Messages xmlns:tns="http://api.ws.liq.misys.com/"><Message>Validation Error: External ID existed. The external ID must be unique. Validation Error: Legal full name existed. The legal full name must be unique. Validation Error: Short name existed. The short name must be unique.</Message></tns:Messages></soapenv:Detail></soapenv:Fault></soapenv:Body></soapenv:Envelope>';
//Determine if the call succceeded or failed
if(str.contains('success="true"')) {
//Get just the important information
pm = str.right(str.length()-str.indexOf('custRID="')-9);
pm = pm.left(pm.indexOf('"'));
acc.LLC_BI__lookupKey__c = pm;
pm = 'Customer successfully created with ID: ' + pm;
//Set the Loan IQ customer ID in Salesforce
update acc;
}else {
//Get the error
pm = 'Customer not created. Error: ' + str.right(str.length()-str.indexOf('<Message>')-9);
pm = pm.left(pm.indexOf('</Message>'));
}
System.debug(str);
//Pass the error message or success info to the page
ApexPages.Message myMsg = new ApexPages.Message(ApexPages.Severity.INFO,pm);
ApexPages.addMessage(myMsg);

//<?xml version="1.0" encoding="utf-8"?><soapenv:Envelope xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope"><soapenv:Body><tns:executeInsertCustomerResponse xmlns:tns="http://api.ws.liq.misys.com/"><InsertCustomerResponse success="true"><CustomerAsReturnValue version="1.0" shortName="NCINO_CUST_002" custRID="BADL8S16"></CustomerAsReturnValue></InsertCustomerResponse></tns:executeInsertCustomerResponse></soapenv:Body></soapenv:Envelope>
//System.debug(res.getBody());
*/
        
        HttpRequest req = new HttpRequest();
        
        //Agent Environment
        
        req.setEndpoint('http://ec2-15-206-191-233.ap-south-1.compute.amazonaws.com:8080/liq_apiWebService/api/liq?wsdl');
        
        req.setMethod('POST');
        
        String username;
        
        String password;
        
        Blob headerValue = Blob.valueOf('LIQ_API' + ':' + 'password');
        
        String authorizationHeader = 'BASIC ' + EncodingUtil.base64Encode(headerValue);
        
        req.setHeader('Authorization', authorizationHeader);
        
        req.setBody(soapCall);
        
        req.settimeout(120000);
        
        Http http = new Http();
        
        HTTPResponse res = http.send(req);
        
        system.debug('Response --->' +  res.getBody());
       
        
       acc.Description = res.getBody();
           
        update acc;
        
        
    }
    
    
}